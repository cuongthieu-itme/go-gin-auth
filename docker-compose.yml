version: "3.8"

services:
  # API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - APP_PORT=8080
      - APP_ENV=production
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASS=rootpassword
      - DB_NAME=authdb
      - JWT_ACCESS_SECRET=supersecretaccess
      - JWT_REFRESH_SECRET=supersecretrefresh
      - JWT_ACCESS_TTL=15m
      - JWT_REFRESH_TTL=168h
      - LOG_LEVEL=info
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_WINDOW=1m
      - BCRYPT_COST=12
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  # MySQL database service
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: authdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-prootpassword",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

# Volumes
volumes:
  mysql_data:
    driver: local

# Networks
networks:
  app-network:
    driver: bridge
